language: c

before_install:
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash scripts/linux/install.sh; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then sudo gem install xcpretty-travis-formatter; fi

sudo: required
dist: trusty
env:
    global:
        - OPENRCT2_VERSION="0.0.5.0"

matrix:
    include:
        - os: linux
          language: android
          dist: precise
          before_install:
            - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            - sudo apt-get -qq update
            - sudo apt-get install -y libstdc++6
          android:
            components:
              - tools # to get the new `repository-11.xml`
              - tools # to install Android SDK tools 25.1.x (x = 7 right now)
              - platform-tools
              - build-tools-24.0.0
              - android-23
              - extra-android-m2repository
          jdk: oraclejdk8
          before_script:
            # Install the NDK.
            - pushd ~
            - wget http://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip
            - unzip -qo android-ndk-r12b-linux-x86_64.zip
            - export ANDROID_NDK_HOME="$HOME/android-ndk-r12b"
            - popd

            # Install Cmake
            - pushd "$ANDROID_HOME"
            - mkdir cmake
            - cd cmake
            - wget https://dl.google.com/android/repository/cmake-3.4.2909474-linux-x86_64.zip
            - unzip -qo cmake-3.4.2909474-linux-x86_64.zip
            - popd

            - 'cd distribution/android'
          env:
            - TERM=dumb # Makes Gradle use 'boring' output
          script:
            - './gradlew app:assembleDebug'
          after_success:
            - curl --progress-bar --upload-file app/build/outputs/apk/app-debug.apk  https://transfer.sh/openrct2-android.apk -o link && cat link
        # Following entries used to be included in testing, but they only proved useful while changing things in CMake setup.
        # They are meant to be used when there are changes to CMakeLists.txt
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=OFF -DDISABLE_HTTP_TWITCH=ON -DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=OFF -DDISABLE_HTTP_TWITCH=OFF -DCMAKE_C_COMPILER=gcc-4.8 -DCMAKE_CXX_COMPILER=g++-4.8"
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_NETWORK=ON -DDISABLE_HTTP_TWITCH=ON -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows
        # - os: linux
        #   env: OPENRCT2_CMAKE_OPTS="-DDISABLE_HTTP_TWITCH=ON -DCMAKE_TOOLCHAIN_FILE=../CMakeLists_mingw.txt" TARGET=windows

script:
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash scripts/linux/build.sh ; fi
    - if [[ $TRAVIS_OS_NAME == "osx" ]]; then set -o pipefail && xcodebuild | xcpretty -f `xcpretty-travis-formatter`; fi

notifications:
    on_failure: change
    on_success: change

cache:
    directories:
        - .cache
    apt: true
